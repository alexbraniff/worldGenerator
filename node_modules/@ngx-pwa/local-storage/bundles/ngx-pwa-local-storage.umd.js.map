{"version":3,"file":"ngx-pwa-local-storage.umd.js.map","sources":["ng://@ngx-pwa/local-storage/lib/tokens.ts","ng://@ngx-pwa/local-storage/lib/databases/localstorage-database.ts","ng://@ngx-pwa/local-storage/lib/databases/indexeddb-database.ts","ng://@ngx-pwa/local-storage/lib/databases/mock-local-database.ts","ng://@ngx-pwa/local-storage/lib/databases/local-database.ts",null,"ng://@ngx-pwa/local-storage/lib/validation/json-validator.ts","ng://@ngx-pwa/local-storage/lib/lib.service.ts"],"sourcesContent":["import { InjectionToken, Provider } from '@angular/core';\n\nexport const LOCAL_STORAGE_PREFIX = new InjectionToken<string>('localStoragePrefix', { providedIn: 'root', factory: () => '' });\n\nexport interface LocalStorageProvidersConfig {\n\n  /** Optional prefix to avoid collision in multiple apps on same subdomain */\n  prefix?: string;\n}\n\nexport function localStorageProviders(config: LocalStorageProvidersConfig): Provider[] {\n  return [\n    config.prefix ? { provide: LOCAL_STORAGE_PREFIX, useValue: config.prefix } : []\n  ];\n}\n","import { Injectable, Optional, Inject } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\n\nimport { LocalDatabase } from './local-database';\nimport { LOCAL_STORAGE_PREFIX } from '../tokens';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageDatabase implements LocalDatabase {\n\n  /* Initializing native localStorage right now to be able to check its support on class instanciation */\n  protected prefix = '';\n\n  constructor(@Optional() @Inject(LOCAL_STORAGE_PREFIX) protected userPrefix: string | null = null) {\n\n    if (userPrefix) {\n      this.prefix = `${userPrefix}_`;\n    }\n\n  }\n\n  /**\n   * Gets an item value in local storage\n   * @param key The item's key\n   * @returns The item's value if the key exists, null otherwise, wrapped in an RxJS Observable\n   */\n  getItem<T = any>(key: string): Observable<T | null> {\n\n    const unparsedData = localStorage.getItem(`${this.prefix}${key}`);\n    let parsedData: T | null = null;\n\n    if (unparsedData != null) {\n\n      try {\n        parsedData = JSON.parse(unparsedData);\n      } catch (error) {\n        return throwError(new Error(`Invalid data in localStorage.`));\n      }\n\n    }\n\n    return of(parsedData);\n\n  }\n\n  /**\n   * Sets an item in local storage\n   * @param key The item's key\n   * @param data The item's value, must NOT be null or undefined\n   * @returns An RxJS Observable to wait the end of the operation\n   */\n  setItem(key: string, data: any): Observable<boolean> {\n\n    localStorage.setItem(`${this.prefix}${key}`, JSON.stringify(data));\n\n    return of(true);\n\n  }\n\n  /**\n   * Deletes an item in local storage\n   * @param key The item's key\n   * @returns An RxJS Observable to wait the end of the operation\n   */\n  removeItem(key: string): Observable<boolean> {\n\n    localStorage.removeItem(`${this.prefix}${key}`);\n\n    return of(true);\n\n  }\n\n  /**\n   * Deletes all items from local storage\n   * @returns An RxJS Observable to wait the end of the operation\n   */\n  clear(): Observable<boolean> {\n\n    localStorage.clear();\n\n    return of(true);\n\n  }\n\n}\n","import { Injectable, Optional, Inject } from '@angular/core';\nimport { Observable, ReplaySubject, fromEvent, of, throwError, race } from 'rxjs';\nimport { map, mergeMap, first } from 'rxjs/operators';\n\nimport { LocalDatabase } from './local-database';\nimport { LocalStorageDatabase } from './localstorage-database';\nimport { LOCAL_STORAGE_PREFIX } from '../tokens';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IndexedDBDatabase implements LocalDatabase {\n\n  /**\n   * IndexedDB database name for local storage\n   */\n  protected dbName = 'ngStorage';\n  /**\n   * IndexedDB object store name for local storage\n   */\n  protected readonly objectStoreName = 'localStorage';\n  /**\n   * IndexedDB key path name for local storage (where an item's key will be stored)\n   */\n  protected readonly keyPath = 'key';\n  /**\n   * IndexedDB data path name for local storage (where items' value will be stored)\n   */\n  protected readonly dataPath = 'value';\n  /**\n   * IndexedDB database connection, wrapped in a RxJS ReplaySubject to be able to access the connection\n   * even after the connection success event happened\n   */\n  protected database: ReplaySubject<IDBDatabase>;\n  /**\n   * IndexedDB is available but failing in some scenarios (Firefox private mode, Safari cross-origin iframes),\n   * so a fallback can be needed.\n   */\n  protected fallback: LocalDatabase | null = null;\n\n  /**\n   * Connects to IndexedDB\n   */\n  constructor(@Optional() @Inject(LOCAL_STORAGE_PREFIX) protected prefix: string | null = null) {\n\n    if (prefix) {\n\n      this.dbName = `${prefix}_${this.dbName}`;\n\n    }\n\n    /* Creating the RxJS ReplaySubject */\n    this.database = new ReplaySubject<IDBDatabase>();\n\n    /* Connecting to IndexedDB */\n    this.connect(prefix);\n\n  }\n\n  /**\n   * Gets an item value in local storage\n   * @param key The item's key\n   * @returns The item's value if the key exists, null otherwise, wrapped in an RxJS Observable\n   */\n  getItem<T = any>(key: string): Observable<TÂ | null> {\n\n    /* Fallback storage if set */\n    if (this.fallback) {\n      return this.fallback.getItem<T>(key);\n    }\n\n    /* Opening a trasaction and requesting the item in local storage */\n    return this.transaction().pipe(\n      map((transaction) => transaction.get(key)),\n      mergeMap((request) => {\n\n        /* Listening to the success event, and passing the item value if found, null otherwise */\n        const success = (fromEvent(request, 'success') as Observable<Event>).pipe(\n          map((event) => (event.target as IDBRequest).result),\n          map((result) => result && (this.dataPath in result) ? (result[this.dataPath] as T) : null)\n        );\n\n        /* Merging success and errors events and autoclosing the observable */\n        return (race(success, this.toErrorObservable(request, `getter`)) as Observable<T | null>)\n          .pipe(first());\n\n      }),\n      first()\n    );\n\n  }\n\n  /**\n   * Sets an item in local storage\n   * @param key The item's key\n   * @param data The item's value, must NOT be null or undefined\n   * @returns An RxJS Observable to wait the end of the operation\n   */\n  setItem(key: string, data: any): Observable<boolean> {\n\n    /* Fallback storage if set */\n    if (this.fallback) {\n      return this.fallback.setItem(key, data);\n    }\n\n    /* Storing null is not correctly supported by IndexedDB and unnecessary here */\n    if (data == null) {\n\n      return of(true);\n\n    }\n\n    /* Opening a transaction and checking if the item already exists in local storage */\n    return this.getItem(key).pipe(\n      map((existingData) => (existingData == null) ? 'add' : 'put'),\n      mergeMap((method) => {\n\n        /* Opening a transaction */\n        return this.transaction('readwrite').pipe(mergeMap((transaction) => {\n\n          let request: IDBRequest;\n\n          /* Adding or updating local storage, based on previous checking */\n          switch (method) {\n            case 'add':\n              request = transaction.add({ [this.dataPath]: data }, key);\n              break;\n            case 'put':\n            default:\n              request = transaction.put({ [this.dataPath]: data }, key);\n              break;\n          }\n\n          /* Merging success (passing true) and error events and autoclosing the observable */\n          return (race(this.toSuccessObservable(request), this.toErrorObservable(request, `setter`)) as Observable<boolean>)\n            .pipe(first());\n\n        }));\n\n      }),\n      first()\n    );\n\n  }\n\n  /**\n   * Deletes an item in local storage\n   * @param key The item's key\n   * @returns An RxJS Observable to wait the end of the operation\n   */\n  removeItem(key: string): Observable<boolean> {\n\n    /* Fallback storage if set */\n    if (this.fallback) {\n      return this.fallback.removeItem(key);\n    }\n\n    /* Opening a transaction and checking if the item exists in local storage */\n    return this.getItem(key).pipe(\n      mergeMap((data) => {\n\n        /* If the item exists in local storage */\n        if (data != null) {\n\n          /* Opening a transaction */\n          return this.transaction('readwrite').pipe(mergeMap((transaction) => {\n\n            /* Deleting the item in local storage */\n            const request = transaction.delete(key);\n\n            /* Merging success (passing true) and error events and autoclosing the observable */\n            return (race(this.toSuccessObservable(request), this.toErrorObservable(request, `remover`)) as Observable<boolean>)\n              .pipe(first());\n\n          }));\n\n        }\n\n        /* Passing true if the item does not exist in local storage */\n        return of(true);\n\n      }),\n      first()\n    );\n\n  }\n\n  /**\n   * Deletes all items from local storage\n   * @returns An RxJS Observable to wait the end of the operation\n   */\n  clear(): Observable<boolean> {\n\n    /* Fallback storage if set */\n    if (this.fallback) {\n      return this.fallback.clear();\n    }\n\n    /* Opening a transaction */\n    return this.transaction('readwrite').pipe(\n      mergeMap((transaction) => {\n\n        /* Deleting all items from local storage */\n        const request = transaction.clear();\n\n        /* Merging success (passing true) and error events and autoclosing the observable */\n        return (race(this.toSuccessObservable(request), this.toErrorObservable(request, `clearer`)) as Observable<boolean>)\n          .pipe(first());\n\n      }),\n      first()\n    );\n\n  }\n\n  /**\n   * Connects to IndexedDB and creates the object store on first time\n   */\n  protected connect(prefix: string | null = null): void {\n\n    let request: IDBOpenDBRequest;\n\n    /* Connecting to IndexedDB */\n    try {\n\n      request = indexedDB.open(this.dbName);\n\n    }Â catch (error) {\n\n      /* Fallback storage if IndexedDb connection is failing */\n      this.setFallback(prefix);\n\n      return;\n\n    }\n\n    /* Listening the event fired on first connection, creating the object store for local storage */\n    (fromEvent(request, 'upgradeneeded') as Observable<Event>)\n      .pipe(first())\n      .subscribe((event) => {\n\n        /* Getting the database connection */\n        const database = (event.target as IDBRequest).result as IDBDatabase;\n\n        /* Checking if the object store already exists, to avoid error */\n        if (!database.objectStoreNames.contains(this.objectStoreName)) {\n\n          /* Creating the object store for local storage */\n          database.createObjectStore(this.objectStoreName);\n\n        }\n\n      });\n\n    /* Listening the success event and converting to an RxJS Observable */\n    const success = fromEvent(request, 'success') as Observable<Event>;\n\n    /* Merging success and errors events */\n    (race(success, this.toErrorObservable(request, `connection`)) as Observable<Event>)\n      .pipe(first())\n      .subscribe((event) => {\n\n        /* Storing the database connection for further access */\n        this.database.next((event.target as IDBRequest).result as IDBDatabase);\n\n      }, () => {\n\n        /* Fallback storage if IndexedDb connection is failing */\n        this.setFallback(prefix);\n\n      });\n\n  }\n\n  /**\n   * Opens an IndexedDB transaction and gets the local storage object store\n   * @param mode Default to 'readonly' for read operations, or 'readwrite' for write operations\n   * @returns An IndexedDB transaction object store, wrapped in an RxJS Observable\n   */\n  protected transaction(mode: 'readonly' | 'readwrite' = 'readonly'): Observable<IDBObjectStore> {\n\n    /* From the IndexedDB connection, opening a transaction and getting the local storage objet store */\n    return this.database\n      .pipe(map((database) => database.transaction([this.objectStoreName], mode).objectStore(this.objectStoreName)));\n\n  }\n\n  /**\n   * Transforms a IndexedDB success event in an RxJS Observable\n   * @param request The request to listen\n   * @returns A RxJS Observable with true value\n   */\n  protected toSuccessObservable(request: IDBRequest): Observable<boolean> {\n\n    /* Transforming a IndexedDB success event in an RxJS Observable with true value */\n    return (fromEvent(request, 'success') as Observable<Event>)\n      .pipe(map(() => true));\n\n  }\n\n  /**\n   * Transforms a IndexedDB error event in an RxJS ErrorObservable\n   * @param request The request to listen\n   * @param error Optionnal details about the error's origin\n   * @returns A RxJS ErrorObservable\n   */\n  protected toErrorObservable(request: IDBRequest, error = ``): Observable<never> {\n\n    /* Transforming a IndexedDB error event in an RxJS ErrorObservable */\n    return (fromEvent(request, 'error') as Observable<Event>)\n      .pipe(mergeMap(() => throwError(new Error(`IndexedDB ${error} issue : ${request.error.message}.`))));\n\n  }\n\n  protected setFallback(prefix: string | null): void {\n    this.fallback = new LocalStorageDatabase(prefix);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nimport { LocalDatabase } from './local-database';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MockLocalDatabase implements LocalDatabase {\n\n  protected localStorage = new Map<string, any>();\n\n  /**\n   * Gets an item value in local storage\n   * @param key The item's key\n   * @returns The item's value if the key exists, null otherwise, wrapped in an RxJS Observable\n   */\n   getItem<T = any>(key: string): Observable<T |Â null> {\n\n    const rawData: T | null = this.localStorage.get(key);\n\n    return of((rawData !== undefined) ? rawData : null);\n\n  }\n\n  /**\n   * Sets an item in local storage\n   * @param key The item's key\n   * @param data The item's value, must NOT be null or undefined\n   * @returns An RxJS Observable to wait the end of the operation\n   */\n   setItem(key: string, data: any): Observable<boolean> {\n\n    this.localStorage.set(key, data);\n\n    return of(true);\n\n  }\n\n  /**\n   * Deletes an item in local storage\n   * @param key The item's key\n   * @returns An RxJS Observable to wait the end of the operation\n   */\n   removeItem(key: string): Observable<boolean> {\n\n    this.localStorage.delete(key);\n\n    return of(true);\n\n  }\n\n  /**\n   * Deletes all items from local storage\n   * @returns An RxJS Observable to wait the end of the operation\n   */\n   clear(): Observable<boolean> {\n\n    this.localStorage.clear();\n\n    return of(true);\n\n  }\n\n}\n","import { Injectable, PLATFORM_ID, Optional } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Observable } from 'rxjs';\n\nimport { IndexedDBDatabase } from './indexeddb-database';\nimport { LocalStorageDatabase } from './localstorage-database';\nimport { MockLocalDatabase } from './mock-local-database';\nimport { LOCAL_STORAGE_PREFIX } from '../tokens';\n\nexport function localDatabaseFactory(platformId: Object, prefix: string | null) {\n\n  if (isPlatformBrowser(platformId) && ('indexedDB' in window) && (indexedDB !== undefined) && (indexedDB !== null)) {\n\n    /* Try with IndexedDB in modern browsers */\n    return new IndexedDBDatabase(prefix);\n\n  } else if (isPlatformBrowser(platformId) && ('localStorage' in window) && (localStorage !== undefined) && (localStorage !== null)) {\n\n    /* Try with localStorage in old browsers (IE9) */\n    return new LocalStorageDatabase(prefix);\n\n  } else {\n\n    /* Fake database for server-side rendering (Universal) */\n    return new MockLocalDatabase();\n\n  }\n\n}\n\n@Injectable({\n  providedIn: 'root',\n  useFactory: localDatabaseFactory,\n  deps: [\n    PLATFORM_ID,\n    [new Optional(), LOCAL_STORAGE_PREFIX]\n  ]\n})\nexport abstract class LocalDatabase {\n\n  abstract getItem<T = any>(key: string): Observable<T | null>;\n  abstract setItem(key: string, data: any): Observable<boolean>;\n  abstract removeItem(key: string): Observable<boolean>;\n  abstract clear(): Observable<boolean>;\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { JSONSchema } from './json-schema';\n\n/**\n * @todo Add other JSON Schema validation features\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class JSONValidator {\n\n  /**\n   * Validate a JSON data against a JSON Schema\n   * @param data JSON data to validate\n   * @param schema Subset of JSON Schema.\n   * Types are enforced to validate everything:\n   * each value MUST have 'type' or 'properties' or 'items' or 'const' or 'enum'.\n   * Therefore, unlike the spec, booleans are not allowed as schemas.\n   * Not all validation features are supported: just follow the interface.\n   * @returns If data is valid : true, if it is invalid : false, and throws if the schema is invalid\n   */\n  validate(data: any, schema: JSONSchema): boolean {\n\n    /** @todo When TS 2.8, explore if this is possible with conditional types */\n    if (((!(schema.hasOwnProperty('const') && schema.const !== undefined)\n    && !(schema.hasOwnProperty('enum') && schema.enum != null) && !(schema.hasOwnProperty('type') && schema.type != null))\n    || schema.type === 'array' || schema.type === 'object')\n    && !(schema.hasOwnProperty('properties') && schema.properties != null)  && !(schema.hasOwnProperty('items') && schema.items != null)) {\n\n      throw new Error(`Each value must have a 'type' or 'properties' or 'items' or 'const' or 'enum', to enforce strict types.`);\n\n    }\n\n    if (schema.hasOwnProperty('const') && schema.const !== undefined && (data !== schema.const)) {\n      return false;\n    }\n\n    if (!this.validateEnum(data, schema)) {\n      return false;\n    }\n\n    if (!this.validateType(data, schema)) {\n      return false;\n    }\n\n    if (!this.validateItems(data, schema)) {\n      return false;\n    }\n\n    if (!this.validateProperties(data, schema)) {\n      return false;\n    }\n\n    if (!this.validateRequired(data, schema)) {\n      return false;\n    }\n\n    return true;\n\n  }\n\n  protected isObjectNotNull(value: any): boolean {\n\n    return (value !== null) && (typeof value === 'object');\n\n  }\n\n  protected validateProperties(data: { [k: string]: any; }, schema: JSONSchema): boolean {\n\n    if (!schema.hasOwnProperty('properties') || (schema.properties == null)) {\n      return true;\n    }\n\n    if (!this.isObjectNotNull(data)) {\n\n      return false;\n\n    }\n\n    /**\n     * Check if the object doesn't have more properties than expected\n     * Equivalent of additionalProperties: false\n     */\n    if (Object.keys(schema.properties).length !== Object.keys(data).length) {\n\n      return false;\n\n    }\n\n    /* Recursively validate all properties */\n    for (const property in schema.properties) {\n\n      if (schema.properties.hasOwnProperty(property) && data.hasOwnProperty(property)) {\n\n        if (!this.validate(data[property], schema.properties[property])) {\n\n          return false;\n\n        }\n\n      }\n\n    }\n\n    return true;\n\n  }\n\n  protected validateRequired(data: {}, schema: JSONSchema): boolean {\n\n    if (!schema.hasOwnProperty('required') || (schema.required == null)) {\n      return true;\n    }\n\n    if (!this.isObjectNotNull(data)) {\n\n      return false;\n\n    }\n\n    for (const requiredProp of schema.required) {\n\n      /* Checks if the property is present in the schema 'properties' */\n      if (!schema.properties || !schema.properties.hasOwnProperty(requiredProp)) {\n\n        throw new Error(`'required' properties must be described in 'properties' too.`);\n\n      }\n\n      /* Checks if the property is present in the data */\n      if (!data.hasOwnProperty(requiredProp)) {\n\n        return false;\n\n      }\n\n    }\n\n    return true;\n\n  }\n\n  protected validateEnum(data: any, schema: JSONSchema): boolean {\n\n    if (!schema.hasOwnProperty('enum') || (schema.enum == null)) {\n      return true;\n    }\n\n    /** @todo Move to ES2016 .includes() ? */\n    return (schema.enum.indexOf(data) !== -1);\n\n  }\n\n  protected validateType(data: any, schema: JSONSchema): boolean {\n\n    if (!schema.hasOwnProperty('type') || (schema.type == null)) {\n      return true;\n    }\n\n    switch (schema.type) {\n\n      case 'null':\n        return data === null;\n      case 'string':\n        return this.validateString(data, schema);\n      case 'number':\n      case 'integer':\n        return this.validateNumber(data, schema);\n      case 'boolean':\n        return typeof data === 'boolean';\n      case 'object':\n        return typeof data === 'object';\n      case 'array':\n        return Array.isArray(data);\n\n    }\n\n  }\n\n  protected validateItems(data: any[], schema: JSONSchema): boolean {\n\n    if (!schema.hasOwnProperty('items') || (schema.items == null)) {\n      return true;\n    }\n\n    if (!Array.isArray(data)) {\n\n      return false;\n\n    }\n\n    if (schema.hasOwnProperty('maxItems') && (schema.maxItems != null)) {\n\n      if (!Number.isInteger(schema.maxItems) || schema.maxItems < 0) {\n\n        throw new Error(`'maxItems' must be a non-negative integer.`);\n\n      }\n\n      if (data.length > schema.maxItems) {\n        return false;\n      }\n\n    }\n\n    if (schema.hasOwnProperty('minItems') && (schema.minItems != null)) {\n\n      if (!Number.isInteger(schema.minItems) || schema.minItems < 0) {\n\n        throw new Error(`'minItems' must be a non-negative integer.`);\n\n      }\n\n      if (data.length < schema.minItems) {\n        return false;\n      }\n\n    }\n\n    if (schema.hasOwnProperty('uniqueItems') && (schema.uniqueItems != null)) {\n\n      if (schema.uniqueItems) {\n\n        const dataSet = new Set(data);\n\n        if (data.length !== dataSet.size) {\n          return false;\n        }\n\n      }\n\n    }\n\n    if (Array.isArray(schema.items)) {\n\n      return this.validateItemsList(data, schema);\n\n    }\n\n    for (const value of data) {\n\n      if (!this.validate(value, schema.items)) {\n        return false;\n      }\n\n    }\n\n    return true;\n\n  }\n\n  protected validateItemsList(data: any, schema: JSONSchema): boolean {\n\n    const items = schema.items as JSONSchema[];\n\n    if (data.length !== items.length) {\n\n      return false;\n\n    }\n\n    for (let i = 0; i < items.length; i += 1) {\n\n      if (!this.validate(data[i], items[i])) {\n        return false;\n      }\n\n    }\n\n    return true;\n\n  }\n\n  protected validateString(data: any, schema: JSONSchema): boolean {\n\n    if (typeof data !== 'string') {\n      return false;\n    }\n\n    if (schema.hasOwnProperty('maxLength') && (schema.maxLength != null)) {\n\n      if (!Number.isInteger(schema.maxLength) || schema.maxLength < 0) {\n\n        throw new Error(`'maxLength' must be a non-negative integer.`);\n\n      }\n\n      if (data.length > schema.maxLength) {\n        return false;\n      }\n\n    }\n\n    if (schema.hasOwnProperty('minLength') && (schema.minLength != null)) {\n\n      if (!Number.isInteger(schema.minLength) || schema.minLength < 0) {\n\n        throw new Error(`'minLength' must be a non-negative integer.`);\n\n      }\n\n      if (data.length < schema.minLength) {\n        return false;\n      }\n\n    }\n\n    if (schema.hasOwnProperty('pattern') && (schema.pattern != null)) {\n\n      const regularExpression = new RegExp(schema.pattern);\n\n      if (!regularExpression.test(data)) {\n        return false;\n      }\n\n    }\n\n    return true;\n\n  }\n\n  protected validateNumber(data: any, schema: JSONSchema): boolean {\n\n    if (typeof data !== 'number') {\n      return false;\n    }\n\n    if ((schema.type === 'integer') && !Number.isInteger(data)) {\n      return false;\n    }\n\n    if (schema.hasOwnProperty('multipleOf') && (schema.multipleOf != null)) {\n\n      if (schema.multipleOf <= 0) {\n\n        throw new Error(`'multipleOf' must be a number strictly greater than 0.`);\n\n      }\n\n      if (!Number.isInteger(data / schema.multipleOf)) {\n        return false;\n      }\n\n    }\n\n    if (schema.hasOwnProperty('maximum') && (schema.maximum != null)) {\n\n      if (data > schema.maximum) {\n        return false;\n      }\n\n    }\n\n    if (schema.hasOwnProperty('exclusiveMaximum') && (schema.exclusiveMaximum != null)) {\n\n      if (data >= schema.exclusiveMaximum) {\n        return false;\n      }\n\n    }\n\n    if (schema.hasOwnProperty('minimum') && (schema.minimum != null)) {\n\n      if (data < schema.minimum) {\n        return false;\n      }\n\n    }\n\n    if (schema.hasOwnProperty('exclusiveMinimum') && (schema.exclusiveMinimum != null)) {\n\n      if (data <= schema.exclusiveMinimum) {\n        return false;\n      }\n\n    }\n\n    return true;\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError, of } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\n\nimport { LocalDatabase } from './databases/local-database';\nimport { JSONSchema } from './validation/json-schema';\nimport { JSONValidator } from './validation/json-validator';\n\nexport interface LSGetItemOptions {\n  schema?: JSONSchema | null;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorage {\n\n  protected readonly getItemOptionsDefault: LSGetItemOptions = {\n    schema: null\n  };\n\n  constructor(protected database: LocalDatabase, protected jsonValidator: JSONValidator) {}\n\n  /**\n   * Gets an item value in local storage\n   * @param key The item's key\n   * @returns The item's value if the key exists, null otherwise, wrapped in an RxJS Observable\n   */\n  getItem<T = any>(key: string, options: LSGetItemOptions = this.getItemOptionsDefault): Observable<T | null> {\n\n    return this.database.getItem<T>(key).pipe(\n\n      /* Validate data upon a json schema if requested */\n      mergeMap((data) => {\n\n        if (options.schema && data !== null) {\n\n          let validation = true;\n\n          try {\n            validation = this.jsonValidator.validate(data, options.schema);\n          } catch (error) {\n            return throwError(error);\n          }\n\n          if (!validation) {\n            return throwError(new Error(`JSON invalid`));\n          }\n\n        }\n\n        return of(data);\n\n      }));\n\n  }\n\n  /**\n   * Sets an item in local storage\n   * @param key The item's key\n   * @param data The item's value, must NOT be null or undefined\n   * @returns An RxJS Observable to wait the end of the operation\n   */\n   setItem(key: string, data: any): Observable<boolean> {\n\n    return this.database.setItem(key, data);\n\n  }\n\n  /**\n   * Deletes an item in local storage\n   * @param key The item's key\n   * @returns An RxJS Observable to wait the end of the operation\n   */\n   removeItem(key: string): Observable<boolean> {\n\n    return this.database.removeItem(key);\n\n  }\n\n  /**\n   * Deletes all items from local storage\n   * @returns An RxJS Observable to wait the end of the operation\n   */\n   clear(): Observable<boolean> {\n\n    return this.database.clear();\n\n  }\n\n  /**\n   * Sets an item in local storage, and auto-subscribes\n   * @param key The item's key\n   * @param data The item's value, must NOT be null or undefined\n   */\n  setItemSubscribe(key: string, data: any): void {\n\n    this.setItem(key, data).subscribe(() => {}, () => {});\n\n  }\n\n  /**\n   * Deletes an item in local storage, and auto-subscribes\n   * @param key The item's key\n   */\n   removeItemSubscribe(key: string): void {\n\n    this.removeItem(key).subscribe(() => {}, () => {});\n\n  }\n\n  /** Deletes all items from local storage, and auto-subscribes */\n  clearSubscribe(): void {\n\n    this.clear().subscribe(() => {}, () => {});\n\n  }\n\n}\n"],"names":["InjectionToken","throwError","of","Injectable","Optional","Inject","ReplaySubject","map","mergeMap","fromEvent","race","first","isPlatformBrowser","PLATFORM_ID","tslib_1.__values"],"mappings":"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"}
