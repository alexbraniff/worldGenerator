/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Injectable, PLATFORM_ID, Optional } from '@angular/core';
import { isPlatformBrowser } from '@angular/common';
import { IndexedDBDatabase } from './indexeddb-database';
import { LocalStorageDatabase } from './localstorage-database';
import { MockLocalDatabase } from './mock-local-database';
import { LOCAL_STORAGE_PREFIX } from '../tokens';
import * as i0 from "@angular/core";
import * as i1 from "../tokens";
/**
 * @param {?} platformId
 * @param {?} prefix
 * @return {?}
 */
export function localDatabaseFactory(platformId, prefix) {
    if (isPlatformBrowser(platformId) && ('indexedDB' in window) && (indexedDB !== undefined) && (indexedDB !== null)) {
        /* Try with IndexedDB in modern browsers */
        return new IndexedDBDatabase(prefix);
    }
    else if (isPlatformBrowser(platformId) && ('localStorage' in window) && (localStorage !== undefined) && (localStorage !== null)) {
        /* Try with localStorage in old browsers (IE9) */
        return new LocalStorageDatabase(prefix);
    }
    else {
        /* Fake database for server-side rendering (Universal) */
        return new MockLocalDatabase();
    }
}
/**
 * @abstract
 */
var LocalDatabase = /** @class */ (function () {
    function LocalDatabase() {
    }
    LocalDatabase.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root',
                    useFactory: localDatabaseFactory,
                    deps: [
                        PLATFORM_ID,
                        [new Optional(), LOCAL_STORAGE_PREFIX]
                    ]
                },] }
    ];
    /** @nocollapse */ LocalDatabase.ngInjectableDef = i0.defineInjectable({ factory: function LocalDatabase_Factory() { return localDatabaseFactory(i0.inject(i0.PLATFORM_ID), i0.inject(i1.LOCAL_STORAGE_PREFIX, 8)); }, token: LocalDatabase, providedIn: "root" });
    return LocalDatabase;
}());
export { LocalDatabase };
function LocalDatabase_tsickle_Closure_declarations() {
    /**
     * @abstract
     * @template T
     * @param {?} key
     * @return {?}
     */
    LocalDatabase.prototype.getItem = function (key) { };
    /**
     * @abstract
     * @param {?} key
     * @param {?} data
     * @return {?}
     */
    LocalDatabase.prototype.setItem = function (key, data) { };
    /**
     * @abstract
     * @param {?} key
     * @return {?}
     */
    LocalDatabase.prototype.removeItem = function (key) { };
    /**
     * @abstract
     * @return {?}
     */
    LocalDatabase.prototype.clear = function () { };
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9jYWwtZGF0YWJhc2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Abmd4LXB3YS9sb2NhbC1zdG9yYWdlLyIsInNvdXJjZXMiOlsibGliL2RhdGFiYXNlcy9sb2NhbC1kYXRhYmFzZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2xFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBR3BELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3pELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQy9ELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzFELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLFdBQVcsQ0FBQzs7Ozs7Ozs7QUFFakQsTUFBTSwrQkFBK0IsVUFBa0IsRUFBRSxNQUFxQjtJQUU1RSxFQUFFLENBQUMsQ0FBQyxpQkFBaUIsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFdBQVcsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsS0FBSyxTQUFTLENBQUMsSUFBSSxDQUFDLFNBQVMsS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7O1FBR2xILE1BQU0sQ0FBQyxJQUFJLGlCQUFpQixDQUFDLE1BQU0sQ0FBQyxDQUFDO0tBRXRDO0lBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLGlCQUFpQixDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsY0FBYyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsWUFBWSxLQUFLLFNBQVMsQ0FBQyxJQUFJLENBQUMsWUFBWSxLQUFLLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQzs7UUFHbEksTUFBTSxDQUFDLElBQUksb0JBQW9CLENBQUMsTUFBTSxDQUFDLENBQUM7S0FFekM7SUFBQyxJQUFJLENBQUMsQ0FBQzs7UUFHTixNQUFNLENBQUMsSUFBSSxpQkFBaUIsRUFBRSxDQUFDO0tBRWhDO0NBRUY7Ozs7Ozs7O2dCQUVBLFVBQVUsU0FBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtvQkFDbEIsVUFBVSxFQUFFLG9CQUFvQjtvQkFDaEMsSUFBSSxFQUFFO3dCQUNKLFdBQVc7d0JBQ1gsQ0FBQyxJQUFJLFFBQVEsRUFBRSxFQUFFLG9CQUFvQixDQUFDO3FCQUN2QztpQkFDRjs7O3dCQXJDRDs7U0FzQ3NCLGFBQWEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBQTEFURk9STV9JRCwgT3B0aW9uYWwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGlzUGxhdGZvcm1Ccm93c2VyIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcblxuaW1wb3J0IHsgSW5kZXhlZERCRGF0YWJhc2UgfSBmcm9tICcuL2luZGV4ZWRkYi1kYXRhYmFzZSc7XG5pbXBvcnQgeyBMb2NhbFN0b3JhZ2VEYXRhYmFzZSB9IGZyb20gJy4vbG9jYWxzdG9yYWdlLWRhdGFiYXNlJztcbmltcG9ydCB7IE1vY2tMb2NhbERhdGFiYXNlIH0gZnJvbSAnLi9tb2NrLWxvY2FsLWRhdGFiYXNlJztcbmltcG9ydCB7IExPQ0FMX1NUT1JBR0VfUFJFRklYIH0gZnJvbSAnLi4vdG9rZW5zJztcblxuZXhwb3J0IGZ1bmN0aW9uIGxvY2FsRGF0YWJhc2VGYWN0b3J5KHBsYXRmb3JtSWQ6IE9iamVjdCwgcHJlZml4OiBzdHJpbmcgfCBudWxsKSB7XG5cbiAgaWYgKGlzUGxhdGZvcm1Ccm93c2VyKHBsYXRmb3JtSWQpICYmICgnaW5kZXhlZERCJyBpbiB3aW5kb3cpICYmIChpbmRleGVkREIgIT09IHVuZGVmaW5lZCkgJiYgKGluZGV4ZWREQiAhPT0gbnVsbCkpIHtcblxuICAgIC8qIFRyeSB3aXRoIEluZGV4ZWREQiBpbiBtb2Rlcm4gYnJvd3NlcnMgKi9cbiAgICByZXR1cm4gbmV3IEluZGV4ZWREQkRhdGFiYXNlKHByZWZpeCk7XG5cbiAgfSBlbHNlIGlmIChpc1BsYXRmb3JtQnJvd3NlcihwbGF0Zm9ybUlkKSAmJiAoJ2xvY2FsU3RvcmFnZScgaW4gd2luZG93KSAmJiAobG9jYWxTdG9yYWdlICE9PSB1bmRlZmluZWQpICYmIChsb2NhbFN0b3JhZ2UgIT09IG51bGwpKSB7XG5cbiAgICAvKiBUcnkgd2l0aCBsb2NhbFN0b3JhZ2UgaW4gb2xkIGJyb3dzZXJzIChJRTkpICovXG4gICAgcmV0dXJuIG5ldyBMb2NhbFN0b3JhZ2VEYXRhYmFzZShwcmVmaXgpO1xuXG4gIH0gZWxzZSB7XG5cbiAgICAvKiBGYWtlIGRhdGFiYXNlIGZvciBzZXJ2ZXItc2lkZSByZW5kZXJpbmcgKFVuaXZlcnNhbCkgKi9cbiAgICByZXR1cm4gbmV3IE1vY2tMb2NhbERhdGFiYXNlKCk7XG5cbiAgfVxuXG59XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxuICB1c2VGYWN0b3J5OiBsb2NhbERhdGFiYXNlRmFjdG9yeSxcbiAgZGVwczogW1xuICAgIFBMQVRGT1JNX0lELFxuICAgIFtuZXcgT3B0aW9uYWwoKSwgTE9DQUxfU1RPUkFHRV9QUkVGSVhdXG4gIF1cbn0pXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgTG9jYWxEYXRhYmFzZSB7XG5cbiAgYWJzdHJhY3QgZ2V0SXRlbTxUID0gYW55PihrZXk6IHN0cmluZyk6IE9ic2VydmFibGU8VCB8IG51bGw+O1xuICBhYnN0cmFjdCBzZXRJdGVtKGtleTogc3RyaW5nLCBkYXRhOiBhbnkpOiBPYnNlcnZhYmxlPGJvb2xlYW4+O1xuICBhYnN0cmFjdCByZW1vdmVJdGVtKGtleTogc3RyaW5nKTogT2JzZXJ2YWJsZTxib29sZWFuPjtcbiAgYWJzdHJhY3QgY2xlYXIoKTogT2JzZXJ2YWJsZTxib29sZWFuPjtcblxufVxuIl19